html, body {
  width:100%;
  height:100%;
  margin:0px;
  padding:0px;
  border:none;
  position:absolute;
  top:0px;
  left:0px;
  right:0px;
  bottom:0px;
}
body {
  background-color: var(--background-color);
  font-family: var(--font-family, 'Segoe WPC','Segoe UI', SFUIText-Light, HelveticaNeue-Light, sans-serif, 'Droid Sans Fallback');
  font-weight: var(--font-weight);
  font-size: var(--font-size, 12pt);
}
body {
  color: var(--vscode-coq-proofviewText);
}
#messages {
  padding: 0 10pt;
  font-family: var(--vscode-editor-font-family);
  font-size: var(--vscode-editor-font-size);
}
#messages {
  color: var(--vscode-coq-proofviewMessage);
}
#stdout {
  padding-left: 4pt;
}
#error {
  white-space: pre-wrap;
  font-family: var(--vscode-editor-font-family);
  font-size: var(--vscode-editor-font-size);
  padding: 0 10pt;
}
#error {
  color: var(--vscode-coq-proofviewError);
}
.hidden {
  display: none;
}

.prettifySymbolsMode span .substitution::before {
  content: attr(subst);
  font-size: 1000em;
}
.prettifySymbolsMode span .substitution {
  content: attr(subst);
  font-size: 0.001em;
}

.hypotheses {
  border-bottom: 2pt solid;
  padding: 0pt;
  padding-bottom: 1em;
}
.hypotheses {
  border-bottom-color: var(--vscode-coq-hypothesesSeparator);
}
.hypotheses .hypothesis .rel {
  margin-right: 1ex;
  margin-left: 3pt;
}
.hypotheses .hypothesis .ident {
  color: var(--vscode-coq-hypothesisIdent);
}
.hypotheses .hypothesis > ul {
  list-style-type: none;
  display: block;
  margin-left: 0pt;
  padding-left: 0pt;
  text-indent: 0pt
}
.hypotheses > li {
  list-style-type: none;
  display: block;
  padding: 2pt 10pt;
  text-indent: 0pt
}
.hypotheses li:nth-child(odd) {
  background-color: var(--vscode-coq-oddHypothesisBackground);
}
.hypotheses .new {
  background-color: var(--vscode-coq-newHypothesisBackground) !important;
}
.hypotheses .changed {
  background-color: var(--vscode-coq-changedHypothesisBackground) !important;
}
.hypothesis {
  white-space: nowrap;
}
.breakText {
  white-space: pre;
}
.noBreakText .expr {
  white-space: nowrap;
}
.noBreakText .ident {
  text-decoration: underline;
}
.goal .goalId {
  /*display: block;*/
  margin-right: 1ex;
}
.goal .goalId {
  color: var(--vscode-coq-goalId);
}
.goal .goalId:before {
  content: '(';
}
.goal .goalId:after {
  content: ')';
}
.goal {
  list-style-type: none;
  white-space: pre;
}
.goal .expr {
  display: block;
}
.hypotheses .new .ident {
  font-weight: bold;
}
.hypotheses .changed .ident {
  font-style: italic;
}
.charsAdded {
  font-style: italic;
  background-color: var(--vscode-coq-addedCharacter);
}
span[class~=charsAdded][class~=substitution]::before {
  font-style: italic;
  background-color: var(--vscode-coq-addedCharacter);
}
.charsRemoved {
  text-decoration: line-through;
  background-color: var(--vscode-coq-removedCharacter);
}
span[class~=charsRemoved][class~=substitution]::before {
  text-decoration: line-through;
  background-color: var(--vscode-coq-removedCharacter);
}

.hypothesese, .hypothesis, .goal, #stdout, #textMeasurer, #measureTest {
  font-family: var(--vscode-editor-font-family);
  font-weight: var(--vscode-editor-font-weight);
  font-size: var(--vscode-editor-font-size);
}

.goalsList {
  margin-left: 0;
  padding-left: 0;
}
.goalsList li:first-child {
  background-color: var(--vscode-coq-mainSubgoalBackground);
  border-top: 0pt;
}
.goalsList li {
  background-color: var(--vscode-coq-subgoalBackground);
  border-top: 1pt solid;
  padding: 5pt 10pt;
  border-top-color: var(--vscode-coq-subgoalSeparator);
}
#measureTest {
  display: none;
}

.richpp .constr-notation {
  color: var(--vscode-coq-termNotation);
}
.richpp .constr-keyword {
  color: var(--vscode-coq-termKeyword);
}
.richpp .constr-evar {
  color: var(--vscode-coq-termEvar);
  font-style: italic;
}
.richpp .constr-path {
  color: var(--vscode-coq-termPath);
}
.richpp .constr-reference {
  color: var(--vscode-coq-termReference);
}
.richpp .constr-type {
  color: var(--vscode-coq-termType);
}
.richpp .constr-variable {
  color: var(--vscode-coq-termVariable);
}
.richpp .message-debug {
  color: var(--vscode-coq-debugMessage);
}
.richpp .message-error {
  color: var(--vscode-coq-errorMessage);
  text-decoration: underline;
}
.richpp .message-warning {
  color: var(--vscode-coq-warningMessage);
}
.richpp .module-keyword {
  color: var(--vscode-coq-moduleKeyword);
}
.richpp .tactic-keyword {
  color: var(--vscode-coq-tacticKeyword);
}
.richpp .tactic-primitive {
  color: var(--vscode-coq-tacticPrimitive);
}
.richpp .tactic-string {
  color: var(--vscode-coq-tacticString);
}

#togglePrettifySymbols {
  text-decoration: line-through;
}
.prettifySymbolsMode #togglePrettifySymbols {
  text-decoration: none
}
